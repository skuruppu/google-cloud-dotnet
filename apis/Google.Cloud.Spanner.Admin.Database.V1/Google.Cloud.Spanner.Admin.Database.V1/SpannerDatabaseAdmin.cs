// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: google/spanner/admin/database/v1/spanner_database_admin.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Spanner.Admin.Database.V1 {

  /// <summary>Holder for reflection information generated from google/spanner/admin/database/v1/spanner_database_admin.proto</summary>
  public static partial class SpannerDatabaseAdminReflection {

    #region Descriptor
    /// <summary>File descriptor for google/spanner/admin/database/v1/spanner_database_admin.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SpannerDatabaseAdminReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cj1nb29nbGUvc3Bhbm5lci9hZG1pbi9kYXRhYmFzZS92MS9zcGFubmVyX2Rh",
            "dGFiYXNlX2FkbWluLnByb3RvEiBnb29nbGUuc3Bhbm5lci5hZG1pbi5kYXRh",
            "YmFzZS52MRocZ29vZ2xlL2FwaS9hbm5vdGF0aW9ucy5wcm90bxoXZ29vZ2xl",
            "L2FwaS9jbGllbnQucHJvdG8aH2dvb2dsZS9hcGkvZmllbGRfYmVoYXZpb3Iu",
            "cHJvdG8aGWdvb2dsZS9hcGkvcmVzb3VyY2UucHJvdG8aHmdvb2dsZS9pYW0v",
            "djEvaWFtX3BvbGljeS5wcm90bxoaZ29vZ2xlL2lhbS92MS9wb2xpY3kucHJv",
            "dG8aI2dvb2dsZS9sb25ncnVubmluZy9vcGVyYXRpb25zLnByb3RvGhtnb29n",
            "bGUvcHJvdG9idWYvZW1wdHkucHJvdG8aH2dvb2dsZS9wcm90b2J1Zi90aW1l",
            "c3RhbXAucHJvdG8aLWdvb2dsZS9zcGFubmVyL2FkbWluL2RhdGFiYXNlL3Yx",
            "L2JhY2t1cC5wcm90bxotZ29vZ2xlL3NwYW5uZXIvYWRtaW4vZGF0YWJhc2Uv",
            "djEvY29tbW9uLnByb3RvIqsBCgtSZXN0b3JlSW5mbxJICgtzb3VyY2VfdHlw",
            "ZRgBIAEoDjIzLmdvb2dsZS5zcGFubmVyLmFkbWluLmRhdGFiYXNlLnYxLlJl",
            "c3RvcmVTb3VyY2VUeXBlEkMKC2JhY2t1cF9pbmZvGAIgASgLMiwuZ29vZ2xl",
            "LnNwYW5uZXIuYWRtaW4uZGF0YWJhc2UudjEuQmFja3VwSW5mb0gAQg0KC3Nv",
            "dXJjZV9pbmZvItEECghEYXRhYmFzZRIRCgRuYW1lGAEgASgJQgPgQQISRAoF",
            "c3RhdGUYAiABKA4yMC5nb29nbGUuc3Bhbm5lci5hZG1pbi5kYXRhYmFzZS52",
            "MS5EYXRhYmFzZS5TdGF0ZUID4EEDEjQKC2NyZWF0ZV90aW1lGAMgASgLMhou",
            "Z29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEID4EEDEkgKDHJlc3RvcmVfaW5m",
            "bxgEIAEoCzItLmdvb2dsZS5zcGFubmVyLmFkbWluLmRhdGFiYXNlLnYxLlJl",
            "c3RvcmVJbmZvQgPgQQMSUgoRZW5jcnlwdGlvbl9jb25maWcYBSABKAsyMi5n",
            "b29nbGUuc3Bhbm5lci5hZG1pbi5kYXRhYmFzZS52MS5FbmNyeXB0aW9uQ29u",
            "ZmlnQgPgQQMSJQoYdmVyc2lvbl9yZXRlbnRpb25fcGVyaW9kGAYgASgJQgPg",
            "QQMSPgoVZWFybGllc3RfdmVyc2lvbl90aW1lGAcgASgLMhouZ29vZ2xlLnBy",
            "b3RvYnVmLlRpbWVzdGFtcEID4EEDIk0KBVN0YXRlEhUKEVNUQVRFX1VOU1BF",
            "Q0lGSUVEEAASDAoIQ1JFQVRJTkcQARIJCgVSRUFEWRACEhQKEFJFQURZX09Q",
            "VElNSVpJTkcQAzpi6kFfCh9zcGFubmVyLmdvb2dsZWFwaXMuY29tL0RhdGFi",
            "YXNlEjxwcm9qZWN0cy97cHJvamVjdH0vaW5zdGFuY2VzL3tpbnN0YW5jZX0v",
            "ZGF0YWJhc2VzL3tkYXRhYmFzZX0idgoUTGlzdERhdGFiYXNlc1JlcXVlc3QS",
            "NwoGcGFyZW50GAEgASgJQifgQQL6QSEKH3NwYW5uZXIuZ29vZ2xlYXBpcy5j",
            "b20vSW5zdGFuY2USEQoJcGFnZV9zaXplGAMgASgFEhIKCnBhZ2VfdG9rZW4Y",
            "BCABKAkibwoVTGlzdERhdGFiYXNlc1Jlc3BvbnNlEj0KCWRhdGFiYXNlcxgB",
            "IAMoCzIqLmdvb2dsZS5zcGFubmVyLmFkbWluLmRhdGFiYXNlLnYxLkRhdGFi",
            "YXNlEhcKD25leHRfcGFnZV90b2tlbhgCIAEoCSLiAQoVQ3JlYXRlRGF0YWJh",
            "c2VSZXF1ZXN0EjcKBnBhcmVudBgBIAEoCUIn4EEC+kEhCh9zcGFubmVyLmdv",
            "b2dsZWFwaXMuY29tL0luc3RhbmNlEh0KEGNyZWF0ZV9zdGF0ZW1lbnQYAiAB",
            "KAlCA+BBAhIdChBleHRyYV9zdGF0ZW1lbnRzGAMgAygJQgPgQQESUgoRZW5j",
            "cnlwdGlvbl9jb25maWcYBCABKAsyMi5nb29nbGUuc3Bhbm5lci5hZG1pbi5k",
            "YXRhYmFzZS52MS5FbmNyeXB0aW9uQ29uZmlnQgPgQQEiUAoWQ3JlYXRlRGF0",
            "YWJhc2VNZXRhZGF0YRI2CghkYXRhYmFzZRgBIAEoCUIk+kEhCh9zcGFubmVy",
            "Lmdvb2dsZWFwaXMuY29tL0RhdGFiYXNlIksKEkdldERhdGFiYXNlUmVxdWVz",
            "dBI1CgRuYW1lGAEgASgJQifgQQL6QSEKH3NwYW5uZXIuZ29vZ2xlYXBpcy5j",
            "b20vRGF0YWJhc2UihAEKGFVwZGF0ZURhdGFiYXNlRGRsUmVxdWVzdBI5Cghk",
            "YXRhYmFzZRgBIAEoCUIn4EEC+kEhCh9zcGFubmVyLmdvb2dsZWFwaXMuY29t",
            "L0RhdGFiYXNlEhcKCnN0YXRlbWVudHMYAiADKAlCA+BBAhIUCgxvcGVyYXRp",
            "b25faWQYAyABKAkingEKGVVwZGF0ZURhdGFiYXNlRGRsTWV0YWRhdGESNgoI",
            "ZGF0YWJhc2UYASABKAlCJPpBIQofc3Bhbm5lci5nb29nbGVhcGlzLmNvbS9E",
            "YXRhYmFzZRISCgpzdGF0ZW1lbnRzGAIgAygJEjUKEWNvbW1pdF90aW1lc3Rh",
            "bXBzGAMgAygLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCJQChNEcm9w",
            "RGF0YWJhc2VSZXF1ZXN0EjkKCGRhdGFiYXNlGAEgASgJQifgQQL6QSEKH3Nw",
            "YW5uZXIuZ29vZ2xlYXBpcy5jb20vRGF0YWJhc2UiUgoVR2V0RGF0YWJhc2VE",
            "ZGxSZXF1ZXN0EjkKCGRhdGFiYXNlGAEgASgJQifgQQL6QSEKH3NwYW5uZXIu",
            "Z29vZ2xlYXBpcy5jb20vRGF0YWJhc2UiLAoWR2V0RGF0YWJhc2VEZGxSZXNw",
            "b25zZRISCgpzdGF0ZW1lbnRzGAEgAygJIo8BCh1MaXN0RGF0YWJhc2VPcGVy",
            "YXRpb25zUmVxdWVzdBI3CgZwYXJlbnQYASABKAlCJ+BBAvpBIQofc3Bhbm5l",
            "ci5nb29nbGVhcGlzLmNvbS9JbnN0YW5jZRIOCgZmaWx0ZXIYAiABKAkSEQoJ",
            "cGFnZV9zaXplGAMgASgFEhIKCnBhZ2VfdG9rZW4YBCABKAkibAoeTGlzdERh",
            "dGFiYXNlT3BlcmF0aW9uc1Jlc3BvbnNlEjEKCm9wZXJhdGlvbnMYASADKAsy",
            "HS5nb29nbGUubG9uZ3J1bm5pbmcuT3BlcmF0aW9uEhcKD25leHRfcGFnZV90",
            "b2tlbhgCIAEoCSKrAQoWUmVzdG9yZURhdGFiYXNlUmVxdWVzdBI3CgZwYXJl",
            "bnQYASABKAlCJ+BBAvpBIQofc3Bhbm5lci5nb29nbGVhcGlzLmNvbS9JbnN0",
            "YW5jZRIYCgtkYXRhYmFzZV9pZBgCIAEoCUID4EECEjQKBmJhY2t1cBgDIAEo",
            "CUIi+kEfCh1zcGFubmVyLmdvb2dsZWFwaXMuY29tL0JhY2t1cEgAQggKBnNv",
            "dXJjZSLnAgoXUmVzdG9yZURhdGFiYXNlTWV0YWRhdGESDAoEbmFtZRgBIAEo",
            "CRJICgtzb3VyY2VfdHlwZRgCIAEoDjIzLmdvb2dsZS5zcGFubmVyLmFkbWlu",
            "LmRhdGFiYXNlLnYxLlJlc3RvcmVTb3VyY2VUeXBlEkMKC2JhY2t1cF9pbmZv",
            "GAMgASgLMiwuZ29vZ2xlLnNwYW5uZXIuYWRtaW4uZGF0YWJhc2UudjEuQmFj",
            "a3VwSW5mb0gAEkUKCHByb2dyZXNzGAQgASgLMjMuZ29vZ2xlLnNwYW5uZXIu",
            "YWRtaW4uZGF0YWJhc2UudjEuT3BlcmF0aW9uUHJvZ3Jlc3MSLwoLY2FuY2Vs",
            "X3RpbWUYBSABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEigKIG9w",
            "dGltaXplX2RhdGFiYXNlX29wZXJhdGlvbl9uYW1lGAYgASgJQg0KC3NvdXJj",
            "ZV9pbmZvIncKIE9wdGltaXplUmVzdG9yZWREYXRhYmFzZU1ldGFkYXRhEgwK",
            "BG5hbWUYASABKAkSRQoIcHJvZ3Jlc3MYAiABKAsyMy5nb29nbGUuc3Bhbm5l",
            "ci5hZG1pbi5kYXRhYmFzZS52MS5PcGVyYXRpb25Qcm9ncmVzcyo1ChFSZXN0",
            "b3JlU291cmNlVHlwZRIUChBUWVBFX1VOU1BFQ0lGSUVEEAASCgoGQkFDS1VQ",
            "EAEykx8KDURhdGFiYXNlQWRtaW4SwAEKDUxpc3REYXRhYmFzZXMSNi5nb29n",
            "bGUuc3Bhbm5lci5hZG1pbi5kYXRhYmFzZS52MS5MaXN0RGF0YWJhc2VzUmVx",
            "dWVzdBo3Lmdvb2dsZS5zcGFubmVyLmFkbWluLmRhdGFiYXNlLnYxLkxpc3RE",
            "YXRhYmFzZXNSZXNwb25zZSI+gtPkkwIvEi0vdjEve3BhcmVudD1wcm9qZWN0",
            "cy8qL2luc3RhbmNlcy8qfS9kYXRhYmFzZXPaQQZwYXJlbnQSpAIKDkNyZWF0",
            "ZURhdGFiYXNlEjcuZ29vZ2xlLnNwYW5uZXIuYWRtaW4uZGF0YWJhc2UudjEu",
            "Q3JlYXRlRGF0YWJhc2VSZXF1ZXN0Gh0uZ29vZ2xlLmxvbmdydW5uaW5nLk9w",
            "ZXJhdGlvbiK5AYLT5JMCMiItL3YxL3twYXJlbnQ9cHJvamVjdHMvKi9pbnN0",
            "YW5jZXMvKn0vZGF0YWJhc2VzOgEq2kEXcGFyZW50LGNyZWF0ZV9zdGF0ZW1l",
            "bnTKQWQKKWdvb2dsZS5zcGFubmVyLmFkbWluLmRhdGFiYXNlLnYxLkRhdGFi",
            "YXNlEjdnb29nbGUuc3Bhbm5lci5hZG1pbi5kYXRhYmFzZS52MS5DcmVhdGVE",
            "YXRhYmFzZU1ldGFkYXRhEq0BCgtHZXREYXRhYmFzZRI0Lmdvb2dsZS5zcGFu",
            "bmVyLmFkbWluLmRhdGFiYXNlLnYxLkdldERhdGFiYXNlUmVxdWVzdBoqLmdv",
            "b2dsZS5zcGFubmVyLmFkbWluLmRhdGFiYXNlLnYxLkRhdGFiYXNlIjyC0+ST",
            "Ai8SLS92MS97bmFtZT1wcm9qZWN0cy8qL2luc3RhbmNlcy8qL2RhdGFiYXNl",
            "cy8qfdpBBG5hbWUSnQIKEVVwZGF0ZURhdGFiYXNlRGRsEjouZ29vZ2xlLnNw",
            "YW5uZXIuYWRtaW4uZGF0YWJhc2UudjEuVXBkYXRlRGF0YWJhc2VEZGxSZXF1",
            "ZXN0Gh0uZ29vZ2xlLmxvbmdydW5uaW5nLk9wZXJhdGlvbiKsAYLT5JMCOjI1",
            "L3YxL3tkYXRhYmFzZT1wcm9qZWN0cy8qL2luc3RhbmNlcy8qL2RhdGFiYXNl",
            "cy8qfS9kZGw6ASraQRNkYXRhYmFzZSxzdGF0ZW1lbnRzykFTChVnb29nbGUu",
            "cHJvdG9idWYuRW1wdHkSOmdvb2dsZS5zcGFubmVyLmFkbWluLmRhdGFiYXNl",
            "LnYxLlVwZGF0ZURhdGFiYXNlRGRsTWV0YWRhdGESowEKDERyb3BEYXRhYmFz",
            "ZRI1Lmdvb2dsZS5zcGFubmVyLmFkbWluLmRhdGFiYXNlLnYxLkRyb3BEYXRh",
            "YmFzZVJlcXVlc3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiRILT5JMCMyox",
            "L3YxL3tkYXRhYmFzZT1wcm9qZWN0cy8qL2luc3RhbmNlcy8qL2RhdGFiYXNl",
            "cy8qfdpBCGRhdGFiYXNlEs0BCg5HZXREYXRhYmFzZURkbBI3Lmdvb2dsZS5z",
            "cGFubmVyLmFkbWluLmRhdGFiYXNlLnYxLkdldERhdGFiYXNlRGRsUmVxdWVz",
            "dBo4Lmdvb2dsZS5zcGFubmVyLmFkbWluLmRhdGFiYXNlLnYxLkdldERhdGFi",
            "YXNlRGRsUmVzcG9uc2UiSILT5JMCNxI1L3YxL3tkYXRhYmFzZT1wcm9qZWN0",
            "cy8qL2luc3RhbmNlcy8qL2RhdGFiYXNlcy8qfS9kZGzaQQhkYXRhYmFzZRLr",
            "AQoMU2V0SWFtUG9saWN5EiIuZ29vZ2xlLmlhbS52MS5TZXRJYW1Qb2xpY3lS",
            "ZXF1ZXN0GhUuZ29vZ2xlLmlhbS52MS5Qb2xpY3kinwGC0+STAoYBIj4vdjEv",
            "e3Jlc291cmNlPXByb2plY3RzLyovaW5zdGFuY2VzLyovZGF0YWJhc2VzLyp9",
            "OnNldElhbVBvbGljeToBKlpBIjwvdjEve3Jlc291cmNlPXByb2plY3RzLyov",
            "aW5zdGFuY2VzLyovYmFja3Vwcy8qfTpzZXRJYW1Qb2xpY3k6ASraQQ9yZXNv",
            "dXJjZSxwb2xpY3kS5AEKDEdldElhbVBvbGljeRIiLmdvb2dsZS5pYW0udjEu",
            "R2V0SWFtUG9saWN5UmVxdWVzdBoVLmdvb2dsZS5pYW0udjEuUG9saWN5IpgB",
            "gtPkkwKGASI+L3YxL3tyZXNvdXJjZT1wcm9qZWN0cy8qL2luc3RhbmNlcy8q",
            "L2RhdGFiYXNlcy8qfTpnZXRJYW1Qb2xpY3k6ASpaQSI8L3YxL3tyZXNvdXJj",
            "ZT1wcm9qZWN0cy8qL2luc3RhbmNlcy8qL2JhY2t1cHMvKn06Z2V0SWFtUG9s",
            "aWN5OgEq2kEIcmVzb3VyY2USnAIKElRlc3RJYW1QZXJtaXNzaW9ucxIoLmdv",
            "b2dsZS5pYW0udjEuVGVzdElhbVBlcm1pc3Npb25zUmVxdWVzdBopLmdvb2ds",
            "ZS5pYW0udjEuVGVzdElhbVBlcm1pc3Npb25zUmVzcG9uc2UisAGC0+STApIB",
            "IkQvdjEve3Jlc291cmNlPXByb2plY3RzLyovaW5zdGFuY2VzLyovZGF0YWJh",
            "c2VzLyp9OnRlc3RJYW1QZXJtaXNzaW9uczoBKlpHIkIvdjEve3Jlc291cmNl",
            "PXByb2plY3RzLyovaW5zdGFuY2VzLyovYmFja3Vwcy8qfTp0ZXN0SWFtUGVy",
            "bWlzc2lvbnM6ASraQRRyZXNvdXJjZSxwZXJtaXNzaW9ucxKfAgoMQ3JlYXRl",
            "QmFja3VwEjUuZ29vZ2xlLnNwYW5uZXIuYWRtaW4uZGF0YWJhc2UudjEuQ3Jl",
            "YXRlQmFja3VwUmVxdWVzdBodLmdvb2dsZS5sb25ncnVubmluZy5PcGVyYXRp",
            "b24iuAGC0+STAjUiKy92MS97cGFyZW50PXByb2plY3RzLyovaW5zdGFuY2Vz",
            "Lyp9L2JhY2t1cHM6BmJhY2t1cNpBF3BhcmVudCxiYWNrdXAsYmFja3VwX2lk",
            "ykFgCidnb29nbGUuc3Bhbm5lci5hZG1pbi5kYXRhYmFzZS52MS5CYWNrdXAS",
            "NWdvb2dsZS5zcGFubmVyLmFkbWluLmRhdGFiYXNlLnYxLkNyZWF0ZUJhY2t1",
            "cE1ldGFkYXRhEqUBCglHZXRCYWNrdXASMi5nb29nbGUuc3Bhbm5lci5hZG1p",
            "bi5kYXRhYmFzZS52MS5HZXRCYWNrdXBSZXF1ZXN0GiguZ29vZ2xlLnNwYW5u",
            "ZXIuYWRtaW4uZGF0YWJhc2UudjEuQmFja3VwIjqC0+STAi0SKy92MS97bmFt",
            "ZT1wcm9qZWN0cy8qL2luc3RhbmNlcy8qL2JhY2t1cHMvKn3aQQRuYW1lEsgB",
            "CgxVcGRhdGVCYWNrdXASNS5nb29nbGUuc3Bhbm5lci5hZG1pbi5kYXRhYmFz",
            "ZS52MS5VcGRhdGVCYWNrdXBSZXF1ZXN0GiguZ29vZ2xlLnNwYW5uZXIuYWRt",
            "aW4uZGF0YWJhc2UudjEuQmFja3VwIleC0+STAjwyMi92MS97YmFja3VwLm5h",
            "bWU9cHJvamVjdHMvKi9pbnN0YW5jZXMvKi9iYWNrdXBzLyp9OgZiYWNrdXDa",
            "QRJiYWNrdXAsdXBkYXRlX21hc2sSmQEKDERlbGV0ZUJhY2t1cBI1Lmdvb2ds",
            "ZS5zcGFubmVyLmFkbWluLmRhdGFiYXNlLnYxLkRlbGV0ZUJhY2t1cFJlcXVl",
            "c3QaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiOoLT5JMCLSorL3YxL3tuYW1l",
            "PXByb2plY3RzLyovaW5zdGFuY2VzLyovYmFja3Vwcy8qfdpBBG5hbWUSuAEK",
            "C0xpc3RCYWNrdXBzEjQuZ29vZ2xlLnNwYW5uZXIuYWRtaW4uZGF0YWJhc2Uu",
            "djEuTGlzdEJhY2t1cHNSZXF1ZXN0GjUuZ29vZ2xlLnNwYW5uZXIuYWRtaW4u",
            "ZGF0YWJhc2UudjEuTGlzdEJhY2t1cHNSZXNwb25zZSI8gtPkkwItEisvdjEv",
            "e3BhcmVudD1wcm9qZWN0cy8qL2luc3RhbmNlcy8qfS9iYWNrdXBz2kEGcGFy",
            "ZW50ErECCg9SZXN0b3JlRGF0YWJhc2USOC5nb29nbGUuc3Bhbm5lci5hZG1p",
            "bi5kYXRhYmFzZS52MS5SZXN0b3JlRGF0YWJhc2VSZXF1ZXN0Gh0uZ29vZ2xl",
            "LmxvbmdydW5uaW5nLk9wZXJhdGlvbiLEAYLT5JMCOiI1L3YxL3twYXJlbnQ9",
            "cHJvamVjdHMvKi9pbnN0YW5jZXMvKn0vZGF0YWJhc2VzOnJlc3RvcmU6ASra",
            "QRlwYXJlbnQsZGF0YWJhc2VfaWQsYmFja3VwykFlCilnb29nbGUuc3Bhbm5l",
            "ci5hZG1pbi5kYXRhYmFzZS52MS5EYXRhYmFzZRI4Z29vZ2xlLnNwYW5uZXIu",
            "YWRtaW4uZGF0YWJhc2UudjEuUmVzdG9yZURhdGFiYXNlTWV0YWRhdGES5AEK",
            "Fkxpc3REYXRhYmFzZU9wZXJhdGlvbnMSPy5nb29nbGUuc3Bhbm5lci5hZG1p",
            "bi5kYXRhYmFzZS52MS5MaXN0RGF0YWJhc2VPcGVyYXRpb25zUmVxdWVzdBpA",
            "Lmdvb2dsZS5zcGFubmVyLmFkbWluLmRhdGFiYXNlLnYxLkxpc3REYXRhYmFz",
            "ZU9wZXJhdGlvbnNSZXNwb25zZSJHgtPkkwI4EjYvdjEve3BhcmVudD1wcm9q",
            "ZWN0cy8qL2luc3RhbmNlcy8qfS9kYXRhYmFzZU9wZXJhdGlvbnPaQQZwYXJl",
            "bnQS3AEKFExpc3RCYWNrdXBPcGVyYXRpb25zEj0uZ29vZ2xlLnNwYW5uZXIu",
            "YWRtaW4uZGF0YWJhc2UudjEuTGlzdEJhY2t1cE9wZXJhdGlvbnNSZXF1ZXN0",
            "Gj4uZ29vZ2xlLnNwYW5uZXIuYWRtaW4uZGF0YWJhc2UudjEuTGlzdEJhY2t1",
            "cE9wZXJhdGlvbnNSZXNwb25zZSJFgtPkkwI2EjQvdjEve3BhcmVudD1wcm9q",
            "ZWN0cy8qL2luc3RhbmNlcy8qfS9iYWNrdXBPcGVyYXRpb25z2kEGcGFyZW50",
            "GnjKQRZzcGFubmVyLmdvb2dsZWFwaXMuY29t0kFcaHR0cHM6Ly93d3cuZ29v",
            "Z2xlYXBpcy5jb20vYXV0aC9jbG91ZC1wbGF0Zm9ybSxodHRwczovL3d3dy5n",
            "b29nbGVhcGlzLmNvbS9hdXRoL3NwYW5uZXIuYWRtaW5C2gIKJGNvbS5nb29n",
            "bGUuc3Bhbm5lci5hZG1pbi5kYXRhYmFzZS52MUIZU3Bhbm5lckRhdGFiYXNl",
            "QWRtaW5Qcm90b1ABWkhnb29nbGUuZ29sYW5nLm9yZy9nZW5wcm90by9nb29n",
            "bGVhcGlzL3NwYW5uZXIvYWRtaW4vZGF0YWJhc2UvdjE7ZGF0YWJhc2WqAiZH",
            "b29nbGUuQ2xvdWQuU3Bhbm5lci5BZG1pbi5EYXRhYmFzZS5WMcoCJkdvb2ds",
            "ZVxDbG91ZFxTcGFubmVyXEFkbWluXERhdGFiYXNlXFYx6gIrR29vZ2xlOjpD",
            "bG91ZDo6U3Bhbm5lcjo6QWRtaW46OkRhdGFiYXNlOjpWMepBSgofc3Bhbm5l",
            "ci5nb29nbGVhcGlzLmNvbS9JbnN0YW5jZRIncHJvamVjdHMve3Byb2plY3R9",
            "L2luc3RhbmNlcy97aW5zdGFuY2V9YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Api.ClientReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, global::Google.Api.ResourceReflection.Descriptor, global::Google.Cloud.Iam.V1.IamPolicyReflection.Descriptor, global::Google.Cloud.Iam.V1.PolicyReflection.Descriptor, global::Google.LongRunning.OperationsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Cloud.Spanner.Admin.Database.V1.BackupReflection.Descriptor, global::Google.Cloud.Spanner.Admin.Database.V1.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Google.Cloud.Spanner.Admin.Database.V1.RestoreSourceType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Spanner.Admin.Database.V1.RestoreInfo), global::Google.Cloud.Spanner.Admin.Database.V1.RestoreInfo.Parser, new[]{ "SourceType", "BackupInfo" }, new[]{ "SourceInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Spanner.Admin.Database.V1.Database), global::Google.Cloud.Spanner.Admin.Database.V1.Database.Parser, new[]{ "Name", "State", "CreateTime", "RestoreInfo", "EncryptionConfig", "VersionRetentionPeriod", "EarliestVersionTime" }, null, new[]{ typeof(global::Google.Cloud.Spanner.Admin.Database.V1.Database.Types.State) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Spanner.Admin.Database.V1.ListDatabasesRequest), global::Google.Cloud.Spanner.Admin.Database.V1.ListDatabasesRequest.Parser, new[]{ "Parent", "PageSize", "PageToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Spanner.Admin.Database.V1.ListDatabasesResponse), global::Google.Cloud.Spanner.Admin.Database.V1.ListDatabasesResponse.Parser, new[]{ "Databases", "NextPageToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Spanner.Admin.Database.V1.CreateDatabaseRequest), global::Google.Cloud.Spanner.Admin.Database.V1.CreateDatabaseRequest.Parser, new[]{ "Parent", "CreateStatement", "ExtraStatements", "EncryptionConfig" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Spanner.Admin.Database.V1.CreateDatabaseMetadata), global::Google.Cloud.Spanner.Admin.Database.V1.CreateDatabaseMetadata.Parser, new[]{ "Database" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Spanner.Admin.Database.V1.GetDatabaseRequest), global::Google.Cloud.Spanner.Admin.Database.V1.GetDatabaseRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Spanner.Admin.Database.V1.UpdateDatabaseDdlRequest), global::Google.Cloud.Spanner.Admin.Database.V1.UpdateDatabaseDdlRequest.Parser, new[]{ "Database", "Statements", "OperationId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Spanner.Admin.Database.V1.UpdateDatabaseDdlMetadata), global::Google.Cloud.Spanner.Admin.Database.V1.UpdateDatabaseDdlMetadata.Parser, new[]{ "Database", "Statements", "CommitTimestamps" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Spanner.Admin.Database.V1.DropDatabaseRequest), global::Google.Cloud.Spanner.Admin.Database.V1.DropDatabaseRequest.Parser, new[]{ "Database" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Spanner.Admin.Database.V1.GetDatabaseDdlRequest), global::Google.Cloud.Spanner.Admin.Database.V1.GetDatabaseDdlRequest.Parser, new[]{ "Database" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Spanner.Admin.Database.V1.GetDatabaseDdlResponse), global::Google.Cloud.Spanner.Admin.Database.V1.GetDatabaseDdlResponse.Parser, new[]{ "Statements" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Spanner.Admin.Database.V1.ListDatabaseOperationsRequest), global::Google.Cloud.Spanner.Admin.Database.V1.ListDatabaseOperationsRequest.Parser, new[]{ "Parent", "Filter", "PageSize", "PageToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Spanner.Admin.Database.V1.ListDatabaseOperationsResponse), global::Google.Cloud.Spanner.Admin.Database.V1.ListDatabaseOperationsResponse.Parser, new[]{ "Operations", "NextPageToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Spanner.Admin.Database.V1.RestoreDatabaseRequest), global::Google.Cloud.Spanner.Admin.Database.V1.RestoreDatabaseRequest.Parser, new[]{ "Parent", "DatabaseId", "Backup" }, new[]{ "Source" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Spanner.Admin.Database.V1.RestoreDatabaseMetadata), global::Google.Cloud.Spanner.Admin.Database.V1.RestoreDatabaseMetadata.Parser, new[]{ "Name", "SourceType", "BackupInfo", "Progress", "CancelTime", "OptimizeDatabaseOperationName" }, new[]{ "SourceInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Spanner.Admin.Database.V1.OptimizeRestoredDatabaseMetadata), global::Google.Cloud.Spanner.Admin.Database.V1.OptimizeRestoredDatabaseMetadata.Parser, new[]{ "Name", "Progress" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Indicates the type of the restore source.
  /// </summary>
  public enum RestoreSourceType {
    /// <summary>
    /// No restore associated.
    /// </summary>
    [pbr::OriginalName("TYPE_UNSPECIFIED")] TypeUnspecified = 0,
    /// <summary>
    /// A backup was used as the source of the restore.
    /// </summary>
    [pbr::OriginalName("BACKUP")] Backup = 1,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Information about the database restore.
  /// </summary>
  public sealed partial class RestoreInfo : pb::IMessage<RestoreInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RestoreInfo> _parser = new pb::MessageParser<RestoreInfo>(() => new RestoreInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RestoreInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Spanner.Admin.Database.V1.SpannerDatabaseAdminReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestoreInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestoreInfo(RestoreInfo other) : this() {
      sourceType_ = other.sourceType_;
      switch (other.SourceInfoCase) {
        case SourceInfoOneofCase.BackupInfo:
          BackupInfo = other.BackupInfo.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestoreInfo Clone() {
      return new RestoreInfo(this);
    }

    /// <summary>Field number for the "source_type" field.</summary>
    public const int SourceTypeFieldNumber = 1;
    private global::Google.Cloud.Spanner.Admin.Database.V1.RestoreSourceType sourceType_ = global::Google.Cloud.Spanner.Admin.Database.V1.RestoreSourceType.TypeUnspecified;
    /// <summary>
    /// The type of the restore source.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Spanner.Admin.Database.V1.RestoreSourceType SourceType {
      get { return sourceType_; }
      set {
        sourceType_ = value;
      }
    }

    /// <summary>Field number for the "backup_info" field.</summary>
    public const int BackupInfoFieldNumber = 2;
    /// <summary>
    /// Information about the backup used to restore the database. The backup
    /// may no longer exist.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Spanner.Admin.Database.V1.BackupInfo BackupInfo {
      get { return sourceInfoCase_ == SourceInfoOneofCase.BackupInfo ? (global::Google.Cloud.Spanner.Admin.Database.V1.BackupInfo) sourceInfo_ : null; }
      set {
        sourceInfo_ = value;
        sourceInfoCase_ = value == null ? SourceInfoOneofCase.None : SourceInfoOneofCase.BackupInfo;
      }
    }

    private object sourceInfo_;
    /// <summary>Enum of possible cases for the "source_info" oneof.</summary>
    public enum SourceInfoOneofCase {
      None = 0,
      BackupInfo = 2,
    }
    private SourceInfoOneofCase sourceInfoCase_ = SourceInfoOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SourceInfoOneofCase SourceInfoCase {
      get { return sourceInfoCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSourceInfo() {
      sourceInfoCase_ = SourceInfoOneofCase.None;
      sourceInfo_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RestoreInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RestoreInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SourceType != other.SourceType) return false;
      if (!object.Equals(BackupInfo, other.BackupInfo)) return false;
      if (SourceInfoCase != other.SourceInfoCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SourceType != global::Google.Cloud.Spanner.Admin.Database.V1.RestoreSourceType.TypeUnspecified) hash ^= SourceType.GetHashCode();
      if (sourceInfoCase_ == SourceInfoOneofCase.BackupInfo) hash ^= BackupInfo.GetHashCode();
      hash ^= (int) sourceInfoCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SourceType != global::Google.Cloud.Spanner.Admin.Database.V1.RestoreSourceType.TypeUnspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) SourceType);
      }
      if (sourceInfoCase_ == SourceInfoOneofCase.BackupInfo) {
        output.WriteRawTag(18);
        output.WriteMessage(BackupInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SourceType != global::Google.Cloud.Spanner.Admin.Database.V1.RestoreSourceType.TypeUnspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) SourceType);
      }
      if (sourceInfoCase_ == SourceInfoOneofCase.BackupInfo) {
        output.WriteRawTag(18);
        output.WriteMessage(BackupInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SourceType != global::Google.Cloud.Spanner.Admin.Database.V1.RestoreSourceType.TypeUnspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SourceType);
      }
      if (sourceInfoCase_ == SourceInfoOneofCase.BackupInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BackupInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RestoreInfo other) {
      if (other == null) {
        return;
      }
      if (other.SourceType != global::Google.Cloud.Spanner.Admin.Database.V1.RestoreSourceType.TypeUnspecified) {
        SourceType = other.SourceType;
      }
      switch (other.SourceInfoCase) {
        case SourceInfoOneofCase.BackupInfo:
          if (BackupInfo == null) {
            BackupInfo = new global::Google.Cloud.Spanner.Admin.Database.V1.BackupInfo();
          }
          BackupInfo.MergeFrom(other.BackupInfo);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SourceType = (global::Google.Cloud.Spanner.Admin.Database.V1.RestoreSourceType) input.ReadEnum();
            break;
          }
          case 18: {
            global::Google.Cloud.Spanner.Admin.Database.V1.BackupInfo subBuilder = new global::Google.Cloud.Spanner.Admin.Database.V1.BackupInfo();
            if (sourceInfoCase_ == SourceInfoOneofCase.BackupInfo) {
              subBuilder.MergeFrom(BackupInfo);
            }
            input.ReadMessage(subBuilder);
            BackupInfo = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SourceType = (global::Google.Cloud.Spanner.Admin.Database.V1.RestoreSourceType) input.ReadEnum();
            break;
          }
          case 18: {
            global::Google.Cloud.Spanner.Admin.Database.V1.BackupInfo subBuilder = new global::Google.Cloud.Spanner.Admin.Database.V1.BackupInfo();
            if (sourceInfoCase_ == SourceInfoOneofCase.BackupInfo) {
              subBuilder.MergeFrom(BackupInfo);
            }
            input.ReadMessage(subBuilder);
            BackupInfo = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A Cloud Spanner database.
  /// </summary>
  public sealed partial class Database : pb::IMessage<Database>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Database> _parser = new pb::MessageParser<Database>(() => new Database());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Database> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Spanner.Admin.Database.V1.SpannerDatabaseAdminReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Database() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Database(Database other) : this() {
      name_ = other.name_;
      state_ = other.state_;
      createTime_ = other.createTime_ != null ? other.createTime_.Clone() : null;
      restoreInfo_ = other.restoreInfo_ != null ? other.restoreInfo_.Clone() : null;
      encryptionConfig_ = other.encryptionConfig_ != null ? other.encryptionConfig_.Clone() : null;
      versionRetentionPeriod_ = other.versionRetentionPeriod_;
      earliestVersionTime_ = other.earliestVersionTime_ != null ? other.earliestVersionTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Database Clone() {
      return new Database(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The name of the database. Values are of the form
    /// `projects/&lt;project>/instances/&lt;instance>/databases/&lt;database>`,
    /// where `&lt;database>` is as specified in the `CREATE DATABASE`
    /// statement. This name can be passed to other API methods to
    /// identify the database.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 2;
    private global::Google.Cloud.Spanner.Admin.Database.V1.Database.Types.State state_ = global::Google.Cloud.Spanner.Admin.Database.V1.Database.Types.State.Unspecified;
    /// <summary>
    /// Output only. The current database state.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Spanner.Admin.Database.V1.Database.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createTime_;
    /// <summary>
    /// Output only. If exists, the time at which the database creation started.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "restore_info" field.</summary>
    public const int RestoreInfoFieldNumber = 4;
    private global::Google.Cloud.Spanner.Admin.Database.V1.RestoreInfo restoreInfo_;
    /// <summary>
    /// Output only. Applicable only for restored databases. Contains information
    /// about the restore source.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Spanner.Admin.Database.V1.RestoreInfo RestoreInfo {
      get { return restoreInfo_; }
      set {
        restoreInfo_ = value;
      }
    }

    /// <summary>Field number for the "encryption_config" field.</summary>
    public const int EncryptionConfigFieldNumber = 5;
    private global::Google.Cloud.Spanner.Admin.Database.V1.EncryptionConfig encryptionConfig_;
    /// <summary>
    /// Output only. Custom encryption configuration (Cloud KMS keys).
    /// Applicable only for databases using the Customer Managed Encryption Keys
    /// feature.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Spanner.Admin.Database.V1.EncryptionConfig EncryptionConfig {
      get { return encryptionConfig_; }
      set {
        encryptionConfig_ = value;
      }
    }

    /// <summary>Field number for the "version_retention_period" field.</summary>
    public const int VersionRetentionPeriodFieldNumber = 6;
    private string versionRetentionPeriod_ = "";
    /// <summary>
    /// Output only. The period in which Cloud Spanner retains all versions of data
    /// for the database. This is same as the value of version_retention_period
    /// database option set using
    /// [UpdateDatabaseDdl][google.spanner.admin.database.v1.DatabaseAdmin.UpdateDatabaseDdl]. Defaults to 1 hour,
    /// if not set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VersionRetentionPeriod {
      get { return versionRetentionPeriod_; }
      set {
        versionRetentionPeriod_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "earliest_version_time" field.</summary>
    public const int EarliestVersionTimeFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp earliestVersionTime_;
    /// <summary>
    /// Output only. Earliest timestamp at which older versions of the data can be
    /// read.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EarliestVersionTime {
      get { return earliestVersionTime_; }
      set {
        earliestVersionTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Database);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Database other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (State != other.State) return false;
      if (!object.Equals(CreateTime, other.CreateTime)) return false;
      if (!object.Equals(RestoreInfo, other.RestoreInfo)) return false;
      if (!object.Equals(EncryptionConfig, other.EncryptionConfig)) return false;
      if (VersionRetentionPeriod != other.VersionRetentionPeriod) return false;
      if (!object.Equals(EarliestVersionTime, other.EarliestVersionTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (State != global::Google.Cloud.Spanner.Admin.Database.V1.Database.Types.State.Unspecified) hash ^= State.GetHashCode();
      if (createTime_ != null) hash ^= CreateTime.GetHashCode();
      if (restoreInfo_ != null) hash ^= RestoreInfo.GetHashCode();
      if (encryptionConfig_ != null) hash ^= EncryptionConfig.GetHashCode();
      if (VersionRetentionPeriod.Length != 0) hash ^= VersionRetentionPeriod.GetHashCode();
      if (earliestVersionTime_ != null) hash ^= EarliestVersionTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (State != global::Google.Cloud.Spanner.Admin.Database.V1.Database.Types.State.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) State);
      }
      if (createTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CreateTime);
      }
      if (restoreInfo_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(RestoreInfo);
      }
      if (encryptionConfig_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(EncryptionConfig);
      }
      if (VersionRetentionPeriod.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(VersionRetentionPeriod);
      }
      if (earliestVersionTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(EarliestVersionTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (State != global::Google.Cloud.Spanner.Admin.Database.V1.Database.Types.State.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) State);
      }
      if (createTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CreateTime);
      }
      if (restoreInfo_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(RestoreInfo);
      }
      if (encryptionConfig_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(EncryptionConfig);
      }
      if (VersionRetentionPeriod.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(VersionRetentionPeriod);
      }
      if (earliestVersionTime_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(EarliestVersionTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (State != global::Google.Cloud.Spanner.Admin.Database.V1.Database.Types.State.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (createTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateTime);
      }
      if (restoreInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RestoreInfo);
      }
      if (encryptionConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EncryptionConfig);
      }
      if (VersionRetentionPeriod.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VersionRetentionPeriod);
      }
      if (earliestVersionTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EarliestVersionTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Database other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.State != global::Google.Cloud.Spanner.Admin.Database.V1.Database.Types.State.Unspecified) {
        State = other.State;
      }
      if (other.createTime_ != null) {
        if (createTime_ == null) {
          CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreateTime.MergeFrom(other.CreateTime);
      }
      if (other.restoreInfo_ != null) {
        if (restoreInfo_ == null) {
          RestoreInfo = new global::Google.Cloud.Spanner.Admin.Database.V1.RestoreInfo();
        }
        RestoreInfo.MergeFrom(other.RestoreInfo);
      }
      if (other.encryptionConfig_ != null) {
        if (encryptionConfig_ == null) {
          EncryptionConfig = new global::Google.Cloud.Spanner.Admin.Database.V1.EncryptionConfig();
        }
        EncryptionConfig.MergeFrom(other.EncryptionConfig);
      }
      if (other.VersionRetentionPeriod.Length != 0) {
        VersionRetentionPeriod = other.VersionRetentionPeriod;
      }
      if (other.earliestVersionTime_ != null) {
        if (earliestVersionTime_ == null) {
          EarliestVersionTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EarliestVersionTime.MergeFrom(other.EarliestVersionTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            State = (global::Google.Cloud.Spanner.Admin.Database.V1.Database.Types.State) input.ReadEnum();
            break;
          }
          case 26: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 34: {
            if (restoreInfo_ == null) {
              RestoreInfo = new global::Google.Cloud.Spanner.Admin.Database.V1.RestoreInfo();
            }
            input.ReadMessage(RestoreInfo);
            break;
          }
          case 42: {
            if (encryptionConfig_ == null) {
              EncryptionConfig = new global::Google.Cloud.Spanner.Admin.Database.V1.EncryptionConfig();
            }
            input.ReadMessage(EncryptionConfig);
            break;
          }
          case 50: {
            VersionRetentionPeriod = input.ReadString();
            break;
          }
          case 58: {
            if (earliestVersionTime_ == null) {
              EarliestVersionTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EarliestVersionTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            State = (global::Google.Cloud.Spanner.Admin.Database.V1.Database.Types.State) input.ReadEnum();
            break;
          }
          case 26: {
            if (createTime_ == null) {
              CreateTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreateTime);
            break;
          }
          case 34: {
            if (restoreInfo_ == null) {
              RestoreInfo = new global::Google.Cloud.Spanner.Admin.Database.V1.RestoreInfo();
            }
            input.ReadMessage(RestoreInfo);
            break;
          }
          case 42: {
            if (encryptionConfig_ == null) {
              EncryptionConfig = new global::Google.Cloud.Spanner.Admin.Database.V1.EncryptionConfig();
            }
            input.ReadMessage(EncryptionConfig);
            break;
          }
          case 50: {
            VersionRetentionPeriod = input.ReadString();
            break;
          }
          case 58: {
            if (earliestVersionTime_ == null) {
              EarliestVersionTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EarliestVersionTime);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Database message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Indicates the current state of the database.
      /// </summary>
      public enum State {
        /// <summary>
        /// Not specified.
        /// </summary>
        [pbr::OriginalName("STATE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The database is still being created. Operations on the database may fail
        /// with `FAILED_PRECONDITION` in this state.
        /// </summary>
        [pbr::OriginalName("CREATING")] Creating = 1,
        /// <summary>
        /// The database is fully created and ready for use.
        /// </summary>
        [pbr::OriginalName("READY")] Ready = 2,
        /// <summary>
        /// The database is fully created and ready for use, but is still
        /// being optimized for performance and cannot handle full load.
        ///
        /// In this state, the database still references the backup
        /// it was restore from, preventing the backup
        /// from being deleted. When optimizations are complete, the full performance
        /// of the database will be restored, and the database will transition to
        /// `READY` state.
        /// </summary>
        [pbr::OriginalName("READY_OPTIMIZING")] ReadyOptimizing = 3,
      }

    }
    #endregion

  }

  /// <summary>
  /// The request for [ListDatabases][google.spanner.admin.database.v1.DatabaseAdmin.ListDatabases].
  /// </summary>
  public sealed partial class ListDatabasesRequest : pb::IMessage<ListDatabasesRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListDatabasesRequest> _parser = new pb::MessageParser<ListDatabasesRequest>(() => new ListDatabasesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListDatabasesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Spanner.Admin.Database.V1.SpannerDatabaseAdminReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDatabasesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDatabasesRequest(ListDatabasesRequest other) : this() {
      parent_ = other.parent_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDatabasesRequest Clone() {
      return new ListDatabasesRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. The instance whose databases should be listed.
    /// Values are of the form `projects/&lt;project>/instances/&lt;instance>`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 3;
    private int pageSize_;
    /// <summary>
    /// Number of databases to be returned in the response. If 0 or less,
    /// defaults to the server's maximum allowed page size.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 4;
    private string pageToken_ = "";
    /// <summary>
    /// If non-empty, `page_token` should contain a
    /// [next_page_token][google.spanner.admin.database.v1.ListDatabasesResponse.next_page_token] from a
    /// previous [ListDatabasesResponse][google.spanner.admin.database.v1.ListDatabasesResponse].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListDatabasesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListDatabasesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (PageSize != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (PageSize != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListDatabasesRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 24: {
            PageSize = input.ReadInt32();
            break;
          }
          case 34: {
            PageToken = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 24: {
            PageSize = input.ReadInt32();
            break;
          }
          case 34: {
            PageToken = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The response for [ListDatabases][google.spanner.admin.database.v1.DatabaseAdmin.ListDatabases].
  /// </summary>
  public sealed partial class ListDatabasesResponse : pb::IMessage<ListDatabasesResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListDatabasesResponse> _parser = new pb::MessageParser<ListDatabasesResponse>(() => new ListDatabasesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListDatabasesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Spanner.Admin.Database.V1.SpannerDatabaseAdminReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDatabasesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDatabasesResponse(ListDatabasesResponse other) : this() {
      databases_ = other.databases_.Clone();
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDatabasesResponse Clone() {
      return new ListDatabasesResponse(this);
    }

    /// <summary>Field number for the "databases" field.</summary>
    public const int DatabasesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Cloud.Spanner.Admin.Database.V1.Database> _repeated_databases_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Cloud.Spanner.Admin.Database.V1.Database.Parser);
    private readonly pbc::RepeatedField<global::Google.Cloud.Spanner.Admin.Database.V1.Database> databases_ = new pbc::RepeatedField<global::Google.Cloud.Spanner.Admin.Database.V1.Database>();
    /// <summary>
    /// Databases that matched the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Cloud.Spanner.Admin.Database.V1.Database> Databases {
      get { return databases_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// `next_page_token` can be sent in a subsequent
    /// [ListDatabases][google.spanner.admin.database.v1.DatabaseAdmin.ListDatabases] call to fetch more
    /// of the matching databases.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListDatabasesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListDatabasesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!databases_.Equals(other.databases_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= databases_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      databases_.WriteTo(output, _repeated_databases_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      databases_.WriteTo(ref output, _repeated_databases_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += databases_.CalculateSize(_repeated_databases_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListDatabasesResponse other) {
      if (other == null) {
        return;
      }
      databases_.Add(other.databases_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            databases_.AddEntriesFrom(input, _repeated_databases_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            databases_.AddEntriesFrom(ref input, _repeated_databases_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The request for [CreateDatabase][google.spanner.admin.database.v1.DatabaseAdmin.CreateDatabase].
  /// </summary>
  public sealed partial class CreateDatabaseRequest : pb::IMessage<CreateDatabaseRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateDatabaseRequest> _parser = new pb::MessageParser<CreateDatabaseRequest>(() => new CreateDatabaseRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateDatabaseRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Spanner.Admin.Database.V1.SpannerDatabaseAdminReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateDatabaseRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateDatabaseRequest(CreateDatabaseRequest other) : this() {
      parent_ = other.parent_;
      createStatement_ = other.createStatement_;
      extraStatements_ = other.extraStatements_.Clone();
      encryptionConfig_ = other.encryptionConfig_ != null ? other.encryptionConfig_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateDatabaseRequest Clone() {
      return new CreateDatabaseRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. The name of the instance that will serve the new database.
    /// Values are of the form `projects/&lt;project>/instances/&lt;instance>`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "create_statement" field.</summary>
    public const int CreateStatementFieldNumber = 2;
    private string createStatement_ = "";
    /// <summary>
    /// Required. A `CREATE DATABASE` statement, which specifies the ID of the
    /// new database.  The database ID must conform to the regular expression
    /// `[a-z][a-z0-9_\-]*[a-z0-9]` and be between 2 and 30 characters in length.
    /// If the database ID is a reserved word or if it contains a hyphen, the
    /// database ID must be enclosed in backticks (`` ` ``).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreateStatement {
      get { return createStatement_; }
      set {
        createStatement_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "extra_statements" field.</summary>
    public const int ExtraStatementsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_extraStatements_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> extraStatements_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Optional. A list of DDL statements to run inside the newly created
    /// database. Statements can create tables, indexes, etc. These
    /// statements execute atomically with the creation of the database:
    /// if there is an error in any statement, the database is not created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ExtraStatements {
      get { return extraStatements_; }
    }

    /// <summary>Field number for the "encryption_config" field.</summary>
    public const int EncryptionConfigFieldNumber = 4;
    private global::Google.Cloud.Spanner.Admin.Database.V1.EncryptionConfig encryptionConfig_;
    /// <summary>
    /// Optional.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Spanner.Admin.Database.V1.EncryptionConfig EncryptionConfig {
      get { return encryptionConfig_; }
      set {
        encryptionConfig_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateDatabaseRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateDatabaseRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (CreateStatement != other.CreateStatement) return false;
      if(!extraStatements_.Equals(other.extraStatements_)) return false;
      if (!object.Equals(EncryptionConfig, other.EncryptionConfig)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (CreateStatement.Length != 0) hash ^= CreateStatement.GetHashCode();
      hash ^= extraStatements_.GetHashCode();
      if (encryptionConfig_ != null) hash ^= EncryptionConfig.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (CreateStatement.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CreateStatement);
      }
      extraStatements_.WriteTo(output, _repeated_extraStatements_codec);
      if (encryptionConfig_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(EncryptionConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (CreateStatement.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CreateStatement);
      }
      extraStatements_.WriteTo(ref output, _repeated_extraStatements_codec);
      if (encryptionConfig_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(EncryptionConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (CreateStatement.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreateStatement);
      }
      size += extraStatements_.CalculateSize(_repeated_extraStatements_codec);
      if (encryptionConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EncryptionConfig);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateDatabaseRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.CreateStatement.Length != 0) {
        CreateStatement = other.CreateStatement;
      }
      extraStatements_.Add(other.extraStatements_);
      if (other.encryptionConfig_ != null) {
        if (encryptionConfig_ == null) {
          EncryptionConfig = new global::Google.Cloud.Spanner.Admin.Database.V1.EncryptionConfig();
        }
        EncryptionConfig.MergeFrom(other.EncryptionConfig);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            CreateStatement = input.ReadString();
            break;
          }
          case 26: {
            extraStatements_.AddEntriesFrom(input, _repeated_extraStatements_codec);
            break;
          }
          case 34: {
            if (encryptionConfig_ == null) {
              EncryptionConfig = new global::Google.Cloud.Spanner.Admin.Database.V1.EncryptionConfig();
            }
            input.ReadMessage(EncryptionConfig);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            CreateStatement = input.ReadString();
            break;
          }
          case 26: {
            extraStatements_.AddEntriesFrom(ref input, _repeated_extraStatements_codec);
            break;
          }
          case 34: {
            if (encryptionConfig_ == null) {
              EncryptionConfig = new global::Google.Cloud.Spanner.Admin.Database.V1.EncryptionConfig();
            }
            input.ReadMessage(EncryptionConfig);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Metadata type for the operation returned by
  /// [CreateDatabase][google.spanner.admin.database.v1.DatabaseAdmin.CreateDatabase].
  /// </summary>
  public sealed partial class CreateDatabaseMetadata : pb::IMessage<CreateDatabaseMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateDatabaseMetadata> _parser = new pb::MessageParser<CreateDatabaseMetadata>(() => new CreateDatabaseMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateDatabaseMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Spanner.Admin.Database.V1.SpannerDatabaseAdminReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateDatabaseMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateDatabaseMetadata(CreateDatabaseMetadata other) : this() {
      database_ = other.database_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateDatabaseMetadata Clone() {
      return new CreateDatabaseMetadata(this);
    }

    /// <summary>Field number for the "database" field.</summary>
    public const int DatabaseFieldNumber = 1;
    private string database_ = "";
    /// <summary>
    /// The database being created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Database {
      get { return database_; }
      set {
        database_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateDatabaseMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateDatabaseMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Database != other.Database) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Database.Length != 0) hash ^= Database.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Database.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Database);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Database.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Database);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Database.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Database);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateDatabaseMetadata other) {
      if (other == null) {
        return;
      }
      if (other.Database.Length != 0) {
        Database = other.Database;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Database = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Database = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The request for [GetDatabase][google.spanner.admin.database.v1.DatabaseAdmin.GetDatabase].
  /// </summary>
  public sealed partial class GetDatabaseRequest : pb::IMessage<GetDatabaseRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetDatabaseRequest> _parser = new pb::MessageParser<GetDatabaseRequest>(() => new GetDatabaseRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetDatabaseRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Spanner.Admin.Database.V1.SpannerDatabaseAdminReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDatabaseRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDatabaseRequest(GetDatabaseRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDatabaseRequest Clone() {
      return new GetDatabaseRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Required. The name of the requested database. Values are of the form
    /// `projects/&lt;project>/instances/&lt;instance>/databases/&lt;database>`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetDatabaseRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetDatabaseRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetDatabaseRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Enqueues the given DDL statements to be applied, in order but not
  /// necessarily all at once, to the database schema at some point (or
  /// points) in the future. The server checks that the statements
  /// are executable (syntactically valid, name tables that exist, etc.)
  /// before enqueueing them, but they may still fail upon
  /// later execution (e.g., if a statement from another batch of
  /// statements is applied first and it conflicts in some way, or if
  /// there is some data-related problem like a `NULL` value in a column to
  /// which `NOT NULL` would be added). If a statement fails, all
  /// subsequent statements in the batch are automatically cancelled.
  ///
  /// Each batch of statements is assigned a name which can be used with
  /// the [Operations][google.longrunning.Operations] API to monitor
  /// progress. See the
  /// [operation_id][google.spanner.admin.database.v1.UpdateDatabaseDdlRequest.operation_id] field for more
  /// details.
  /// </summary>
  public sealed partial class UpdateDatabaseDdlRequest : pb::IMessage<UpdateDatabaseDdlRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateDatabaseDdlRequest> _parser = new pb::MessageParser<UpdateDatabaseDdlRequest>(() => new UpdateDatabaseDdlRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateDatabaseDdlRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Spanner.Admin.Database.V1.SpannerDatabaseAdminReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateDatabaseDdlRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateDatabaseDdlRequest(UpdateDatabaseDdlRequest other) : this() {
      database_ = other.database_;
      statements_ = other.statements_.Clone();
      operationId_ = other.operationId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateDatabaseDdlRequest Clone() {
      return new UpdateDatabaseDdlRequest(this);
    }

    /// <summary>Field number for the "database" field.</summary>
    public const int DatabaseFieldNumber = 1;
    private string database_ = "";
    /// <summary>
    /// Required. The database to update.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Database {
      get { return database_; }
      set {
        database_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "statements" field.</summary>
    public const int StatementsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_statements_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> statements_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Required. DDL statements to be applied to the database.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Statements {
      get { return statements_; }
    }

    /// <summary>Field number for the "operation_id" field.</summary>
    public const int OperationIdFieldNumber = 3;
    private string operationId_ = "";
    /// <summary>
    /// If empty, the new update request is assigned an
    /// automatically-generated operation ID. Otherwise, `operation_id`
    /// is used to construct the name of the resulting
    /// [Operation][google.longrunning.Operation].
    ///
    /// Specifying an explicit operation ID simplifies determining
    /// whether the statements were executed in the event that the
    /// [UpdateDatabaseDdl][google.spanner.admin.database.v1.DatabaseAdmin.UpdateDatabaseDdl] call is replayed,
    /// or the return value is otherwise lost: the [database][google.spanner.admin.database.v1.UpdateDatabaseDdlRequest.database] and
    /// `operation_id` fields can be combined to form the
    /// [name][google.longrunning.Operation.name] of the resulting
    /// [longrunning.Operation][google.longrunning.Operation]: `&lt;database>/operations/&lt;operation_id>`.
    ///
    /// `operation_id` should be unique within the database, and must be
    /// a valid identifier: `[a-z][a-z0-9_]*`. Note that
    /// automatically-generated operation IDs always begin with an
    /// underscore. If the named operation already exists,
    /// [UpdateDatabaseDdl][google.spanner.admin.database.v1.DatabaseAdmin.UpdateDatabaseDdl] returns
    /// `ALREADY_EXISTS`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OperationId {
      get { return operationId_; }
      set {
        operationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateDatabaseDdlRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateDatabaseDdlRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Database != other.Database) return false;
      if(!statements_.Equals(other.statements_)) return false;
      if (OperationId != other.OperationId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Database.Length != 0) hash ^= Database.GetHashCode();
      hash ^= statements_.GetHashCode();
      if (OperationId.Length != 0) hash ^= OperationId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Database.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Database);
      }
      statements_.WriteTo(output, _repeated_statements_codec);
      if (OperationId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(OperationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Database.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Database);
      }
      statements_.WriteTo(ref output, _repeated_statements_codec);
      if (OperationId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(OperationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Database.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Database);
      }
      size += statements_.CalculateSize(_repeated_statements_codec);
      if (OperationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OperationId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateDatabaseDdlRequest other) {
      if (other == null) {
        return;
      }
      if (other.Database.Length != 0) {
        Database = other.Database;
      }
      statements_.Add(other.statements_);
      if (other.OperationId.Length != 0) {
        OperationId = other.OperationId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Database = input.ReadString();
            break;
          }
          case 18: {
            statements_.AddEntriesFrom(input, _repeated_statements_codec);
            break;
          }
          case 26: {
            OperationId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Database = input.ReadString();
            break;
          }
          case 18: {
            statements_.AddEntriesFrom(ref input, _repeated_statements_codec);
            break;
          }
          case 26: {
            OperationId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Metadata type for the operation returned by
  /// [UpdateDatabaseDdl][google.spanner.admin.database.v1.DatabaseAdmin.UpdateDatabaseDdl].
  /// </summary>
  public sealed partial class UpdateDatabaseDdlMetadata : pb::IMessage<UpdateDatabaseDdlMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateDatabaseDdlMetadata> _parser = new pb::MessageParser<UpdateDatabaseDdlMetadata>(() => new UpdateDatabaseDdlMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateDatabaseDdlMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Spanner.Admin.Database.V1.SpannerDatabaseAdminReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateDatabaseDdlMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateDatabaseDdlMetadata(UpdateDatabaseDdlMetadata other) : this() {
      database_ = other.database_;
      statements_ = other.statements_.Clone();
      commitTimestamps_ = other.commitTimestamps_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateDatabaseDdlMetadata Clone() {
      return new UpdateDatabaseDdlMetadata(this);
    }

    /// <summary>Field number for the "database" field.</summary>
    public const int DatabaseFieldNumber = 1;
    private string database_ = "";
    /// <summary>
    /// The database being modified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Database {
      get { return database_; }
      set {
        database_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "statements" field.</summary>
    public const int StatementsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_statements_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> statements_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// For an update this list contains all the statements. For an
    /// individual statement, this list contains only that statement.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Statements {
      get { return statements_; }
    }

    /// <summary>Field number for the "commit_timestamps" field.</summary>
    public const int CommitTimestampsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Protobuf.WellKnownTypes.Timestamp> _repeated_commitTimestamps_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Protobuf.WellKnownTypes.Timestamp.Parser);
    private readonly pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Timestamp> commitTimestamps_ = new pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Timestamp>();
    /// <summary>
    /// Reports the commit timestamps of all statements that have
    /// succeeded so far, where `commit_timestamps[i]` is the commit
    /// timestamp for the statement `statements[i]`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Timestamp> CommitTimestamps {
      get { return commitTimestamps_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateDatabaseDdlMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateDatabaseDdlMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Database != other.Database) return false;
      if(!statements_.Equals(other.statements_)) return false;
      if(!commitTimestamps_.Equals(other.commitTimestamps_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Database.Length != 0) hash ^= Database.GetHashCode();
      hash ^= statements_.GetHashCode();
      hash ^= commitTimestamps_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Database.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Database);
      }
      statements_.WriteTo(output, _repeated_statements_codec);
      commitTimestamps_.WriteTo(output, _repeated_commitTimestamps_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Database.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Database);
      }
      statements_.WriteTo(ref output, _repeated_statements_codec);
      commitTimestamps_.WriteTo(ref output, _repeated_commitTimestamps_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Database.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Database);
      }
      size += statements_.CalculateSize(_repeated_statements_codec);
      size += commitTimestamps_.CalculateSize(_repeated_commitTimestamps_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateDatabaseDdlMetadata other) {
      if (other == null) {
        return;
      }
      if (other.Database.Length != 0) {
        Database = other.Database;
      }
      statements_.Add(other.statements_);
      commitTimestamps_.Add(other.commitTimestamps_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Database = input.ReadString();
            break;
          }
          case 18: {
            statements_.AddEntriesFrom(input, _repeated_statements_codec);
            break;
          }
          case 26: {
            commitTimestamps_.AddEntriesFrom(input, _repeated_commitTimestamps_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Database = input.ReadString();
            break;
          }
          case 18: {
            statements_.AddEntriesFrom(ref input, _repeated_statements_codec);
            break;
          }
          case 26: {
            commitTimestamps_.AddEntriesFrom(ref input, _repeated_commitTimestamps_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The request for [DropDatabase][google.spanner.admin.database.v1.DatabaseAdmin.DropDatabase].
  /// </summary>
  public sealed partial class DropDatabaseRequest : pb::IMessage<DropDatabaseRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DropDatabaseRequest> _parser = new pb::MessageParser<DropDatabaseRequest>(() => new DropDatabaseRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DropDatabaseRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Spanner.Admin.Database.V1.SpannerDatabaseAdminReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DropDatabaseRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DropDatabaseRequest(DropDatabaseRequest other) : this() {
      database_ = other.database_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DropDatabaseRequest Clone() {
      return new DropDatabaseRequest(this);
    }

    /// <summary>Field number for the "database" field.</summary>
    public const int DatabaseFieldNumber = 1;
    private string database_ = "";
    /// <summary>
    /// Required. The database to be dropped.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Database {
      get { return database_; }
      set {
        database_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DropDatabaseRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DropDatabaseRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Database != other.Database) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Database.Length != 0) hash ^= Database.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Database.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Database);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Database.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Database);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Database.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Database);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DropDatabaseRequest other) {
      if (other == null) {
        return;
      }
      if (other.Database.Length != 0) {
        Database = other.Database;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Database = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Database = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The request for [GetDatabaseDdl][google.spanner.admin.database.v1.DatabaseAdmin.GetDatabaseDdl].
  /// </summary>
  public sealed partial class GetDatabaseDdlRequest : pb::IMessage<GetDatabaseDdlRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetDatabaseDdlRequest> _parser = new pb::MessageParser<GetDatabaseDdlRequest>(() => new GetDatabaseDdlRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetDatabaseDdlRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Spanner.Admin.Database.V1.SpannerDatabaseAdminReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDatabaseDdlRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDatabaseDdlRequest(GetDatabaseDdlRequest other) : this() {
      database_ = other.database_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDatabaseDdlRequest Clone() {
      return new GetDatabaseDdlRequest(this);
    }

    /// <summary>Field number for the "database" field.</summary>
    public const int DatabaseFieldNumber = 1;
    private string database_ = "";
    /// <summary>
    /// Required. The database whose schema we wish to get.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Database {
      get { return database_; }
      set {
        database_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetDatabaseDdlRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetDatabaseDdlRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Database != other.Database) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Database.Length != 0) hash ^= Database.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Database.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Database);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Database.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Database);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Database.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Database);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetDatabaseDdlRequest other) {
      if (other == null) {
        return;
      }
      if (other.Database.Length != 0) {
        Database = other.Database;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Database = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Database = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The response for [GetDatabaseDdl][google.spanner.admin.database.v1.DatabaseAdmin.GetDatabaseDdl].
  /// </summary>
  public sealed partial class GetDatabaseDdlResponse : pb::IMessage<GetDatabaseDdlResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetDatabaseDdlResponse> _parser = new pb::MessageParser<GetDatabaseDdlResponse>(() => new GetDatabaseDdlResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetDatabaseDdlResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Spanner.Admin.Database.V1.SpannerDatabaseAdminReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDatabaseDdlResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDatabaseDdlResponse(GetDatabaseDdlResponse other) : this() {
      statements_ = other.statements_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDatabaseDdlResponse Clone() {
      return new GetDatabaseDdlResponse(this);
    }

    /// <summary>Field number for the "statements" field.</summary>
    public const int StatementsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_statements_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> statements_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// A list of formatted DDL statements defining the schema of the database
    /// specified in the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Statements {
      get { return statements_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetDatabaseDdlResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetDatabaseDdlResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!statements_.Equals(other.statements_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= statements_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      statements_.WriteTo(output, _repeated_statements_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      statements_.WriteTo(ref output, _repeated_statements_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += statements_.CalculateSize(_repeated_statements_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetDatabaseDdlResponse other) {
      if (other == null) {
        return;
      }
      statements_.Add(other.statements_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            statements_.AddEntriesFrom(input, _repeated_statements_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            statements_.AddEntriesFrom(ref input, _repeated_statements_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The request for
  /// [ListDatabaseOperations][google.spanner.admin.database.v1.DatabaseAdmin.ListDatabaseOperations].
  /// </summary>
  public sealed partial class ListDatabaseOperationsRequest : pb::IMessage<ListDatabaseOperationsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListDatabaseOperationsRequest> _parser = new pb::MessageParser<ListDatabaseOperationsRequest>(() => new ListDatabaseOperationsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListDatabaseOperationsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Spanner.Admin.Database.V1.SpannerDatabaseAdminReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDatabaseOperationsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDatabaseOperationsRequest(ListDatabaseOperationsRequest other) : this() {
      parent_ = other.parent_;
      filter_ = other.filter_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDatabaseOperationsRequest Clone() {
      return new ListDatabaseOperationsRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. The instance of the database operations.
    /// Values are of the form `projects/&lt;project>/instances/&lt;instance>`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 2;
    private string filter_ = "";
    /// <summary>
    /// An expression that filters the list of returned operations.
    ///
    /// A filter expression consists of a field name, a
    /// comparison operator, and a value for filtering.
    /// The value must be a string, a number, or a boolean. The comparison operator
    /// must be one of: `&lt;`, `>`, `&lt;=`, `>=`, `!=`, `=`, or `:`.
    /// Colon `:` is the contains operator. Filter rules are not case sensitive.
    ///
    /// The following fields in the [Operation][google.longrunning.Operation]
    /// are eligible for filtering:
    ///
    ///   * `name` - The name of the long-running operation
    ///   * `done` - False if the operation is in progress, else true.
    ///   * `metadata.@type` - the type of metadata. For example, the type string
    ///      for [RestoreDatabaseMetadata][google.spanner.admin.database.v1.RestoreDatabaseMetadata] is
    ///      `type.googleapis.com/google.spanner.admin.database.v1.RestoreDatabaseMetadata`.
    ///   * `metadata.&lt;field_name>` - any field in metadata.value.
    ///   * `error` - Error associated with the long-running operation.
    ///   * `response.@type` - the type of response.
    ///   * `response.&lt;field_name>` - any field in response.value.
    ///
    /// You can combine multiple expressions by enclosing each expression in
    /// parentheses. By default, expressions are combined with AND logic. However,
    /// you can specify AND, OR, and NOT logic explicitly.
    ///
    /// Here are a few examples:
    ///
    ///   * `done:true` - The operation is complete.
    ///   * `(metadata.@type=type.googleapis.com/google.spanner.admin.database.v1.RestoreDatabaseMetadata) AND` &lt;br/>
    ///     `(metadata.source_type:BACKUP) AND` &lt;br/>
    ///     `(metadata.backup_info.backup:backup_howl) AND` &lt;br/>
    ///     `(metadata.name:restored_howl) AND` &lt;br/>
    ///     `(metadata.progress.start_time &lt; \"2018-03-28T14:50:00Z\") AND` &lt;br/>
    ///     `(error:*)` - Return operations where:
    ///     * The operation's metadata type is [RestoreDatabaseMetadata][google.spanner.admin.database.v1.RestoreDatabaseMetadata].
    ///     * The database is restored from a backup.
    ///     * The backup name contains "backup_howl".
    ///     * The restored database's name contains "restored_howl".
    ///     * The operation started before 2018-03-28T14:50:00Z.
    ///     * The operation resulted in an error.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 3;
    private int pageSize_;
    /// <summary>
    /// Number of operations to be returned in the response. If 0 or
    /// less, defaults to the server's maximum allowed page size.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 4;
    private string pageToken_ = "";
    /// <summary>
    /// If non-empty, `page_token` should contain a
    /// [next_page_token][google.spanner.admin.database.v1.ListDatabaseOperationsResponse.next_page_token]
    /// from a previous [ListDatabaseOperationsResponse][google.spanner.admin.database.v1.ListDatabaseOperationsResponse] to the
    /// same `parent` and with the same `filter`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListDatabaseOperationsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListDatabaseOperationsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (Filter != other.Filter) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Filter);
      }
      if (PageSize != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Filter);
      }
      if (PageSize != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListDatabaseOperationsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            Filter = input.ReadString();
            break;
          }
          case 24: {
            PageSize = input.ReadInt32();
            break;
          }
          case 34: {
            PageToken = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            Filter = input.ReadString();
            break;
          }
          case 24: {
            PageSize = input.ReadInt32();
            break;
          }
          case 34: {
            PageToken = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The response for
  /// [ListDatabaseOperations][google.spanner.admin.database.v1.DatabaseAdmin.ListDatabaseOperations].
  /// </summary>
  public sealed partial class ListDatabaseOperationsResponse : pb::IMessage<ListDatabaseOperationsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ListDatabaseOperationsResponse> _parser = new pb::MessageParser<ListDatabaseOperationsResponse>(() => new ListDatabaseOperationsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListDatabaseOperationsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Spanner.Admin.Database.V1.SpannerDatabaseAdminReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDatabaseOperationsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDatabaseOperationsResponse(ListDatabaseOperationsResponse other) : this() {
      operations_ = other.operations_.Clone();
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDatabaseOperationsResponse Clone() {
      return new ListDatabaseOperationsResponse(this);
    }

    /// <summary>Field number for the "operations" field.</summary>
    public const int OperationsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.LongRunning.Operation> _repeated_operations_codec
        = pb::FieldCodec.ForMessage(10, global::Google.LongRunning.Operation.Parser);
    private readonly pbc::RepeatedField<global::Google.LongRunning.Operation> operations_ = new pbc::RepeatedField<global::Google.LongRunning.Operation>();
    /// <summary>
    /// The list of matching database [long-running
    /// operations][google.longrunning.Operation]. Each operation's name will be
    /// prefixed by the database's name. The operation's
    /// [metadata][google.longrunning.Operation.metadata] field type
    /// `metadata.type_url` describes the type of the metadata.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.LongRunning.Operation> Operations {
      get { return operations_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// `next_page_token` can be sent in a subsequent
    /// [ListDatabaseOperations][google.spanner.admin.database.v1.DatabaseAdmin.ListDatabaseOperations]
    /// call to fetch more of the matching metadata.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListDatabaseOperationsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListDatabaseOperationsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!operations_.Equals(other.operations_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= operations_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      operations_.WriteTo(output, _repeated_operations_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      operations_.WriteTo(ref output, _repeated_operations_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += operations_.CalculateSize(_repeated_operations_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListDatabaseOperationsResponse other) {
      if (other == null) {
        return;
      }
      operations_.Add(other.operations_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            operations_.AddEntriesFrom(input, _repeated_operations_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            operations_.AddEntriesFrom(ref input, _repeated_operations_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The request for
  /// [RestoreDatabase][google.spanner.admin.database.v1.DatabaseAdmin.RestoreDatabase].
  /// </summary>
  public sealed partial class RestoreDatabaseRequest : pb::IMessage<RestoreDatabaseRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RestoreDatabaseRequest> _parser = new pb::MessageParser<RestoreDatabaseRequest>(() => new RestoreDatabaseRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RestoreDatabaseRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Spanner.Admin.Database.V1.SpannerDatabaseAdminReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestoreDatabaseRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestoreDatabaseRequest(RestoreDatabaseRequest other) : this() {
      parent_ = other.parent_;
      databaseId_ = other.databaseId_;
      switch (other.SourceCase) {
        case SourceOneofCase.Backup:
          Backup = other.Backup;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestoreDatabaseRequest Clone() {
      return new RestoreDatabaseRequest(this);
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 1;
    private string parent_ = "";
    /// <summary>
    /// Required. The name of the instance in which to create the
    /// restored database. This instance must be in the same project and
    /// have the same instance configuration as the instance containing
    /// the source backup. Values are of the form
    /// `projects/&lt;project>/instances/&lt;instance>`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Parent {
      get { return parent_; }
      set {
        parent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "database_id" field.</summary>
    public const int DatabaseIdFieldNumber = 2;
    private string databaseId_ = "";
    /// <summary>
    /// Required. The id of the database to create and restore to. This
    /// database must not already exist. The `database_id` appended to
    /// `parent` forms the full database name of the form
    /// `projects/&lt;project>/instances/&lt;instance>/databases/&lt;database_id>`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DatabaseId {
      get { return databaseId_; }
      set {
        databaseId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "backup" field.</summary>
    public const int BackupFieldNumber = 3;
    /// <summary>
    /// Name of the backup from which to restore.  Values are of the form
    /// `projects/&lt;project>/instances/&lt;instance>/backups/&lt;backup>`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Backup {
      get { return sourceCase_ == SourceOneofCase.Backup ? (string) source_ : ""; }
      set {
        source_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        sourceCase_ = SourceOneofCase.Backup;
      }
    }

    private object source_;
    /// <summary>Enum of possible cases for the "source" oneof.</summary>
    public enum SourceOneofCase {
      None = 0,
      Backup = 3,
    }
    private SourceOneofCase sourceCase_ = SourceOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SourceOneofCase SourceCase {
      get { return sourceCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSource() {
      sourceCase_ = SourceOneofCase.None;
      source_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RestoreDatabaseRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RestoreDatabaseRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Parent != other.Parent) return false;
      if (DatabaseId != other.DatabaseId) return false;
      if (Backup != other.Backup) return false;
      if (SourceCase != other.SourceCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Parent.Length != 0) hash ^= Parent.GetHashCode();
      if (DatabaseId.Length != 0) hash ^= DatabaseId.GetHashCode();
      if (sourceCase_ == SourceOneofCase.Backup) hash ^= Backup.GetHashCode();
      hash ^= (int) sourceCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (DatabaseId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DatabaseId);
      }
      if (sourceCase_ == SourceOneofCase.Backup) {
        output.WriteRawTag(26);
        output.WriteString(Backup);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Parent.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Parent);
      }
      if (DatabaseId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DatabaseId);
      }
      if (sourceCase_ == SourceOneofCase.Backup) {
        output.WriteRawTag(26);
        output.WriteString(Backup);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Parent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Parent);
      }
      if (DatabaseId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DatabaseId);
      }
      if (sourceCase_ == SourceOneofCase.Backup) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Backup);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RestoreDatabaseRequest other) {
      if (other == null) {
        return;
      }
      if (other.Parent.Length != 0) {
        Parent = other.Parent;
      }
      if (other.DatabaseId.Length != 0) {
        DatabaseId = other.DatabaseId;
      }
      switch (other.SourceCase) {
        case SourceOneofCase.Backup:
          Backup = other.Backup;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            DatabaseId = input.ReadString();
            break;
          }
          case 26: {
            Backup = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Parent = input.ReadString();
            break;
          }
          case 18: {
            DatabaseId = input.ReadString();
            break;
          }
          case 26: {
            Backup = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Metadata type for the long-running operation returned by
  /// [RestoreDatabase][google.spanner.admin.database.v1.DatabaseAdmin.RestoreDatabase].
  /// </summary>
  public sealed partial class RestoreDatabaseMetadata : pb::IMessage<RestoreDatabaseMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RestoreDatabaseMetadata> _parser = new pb::MessageParser<RestoreDatabaseMetadata>(() => new RestoreDatabaseMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RestoreDatabaseMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Spanner.Admin.Database.V1.SpannerDatabaseAdminReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestoreDatabaseMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestoreDatabaseMetadata(RestoreDatabaseMetadata other) : this() {
      name_ = other.name_;
      sourceType_ = other.sourceType_;
      progress_ = other.progress_ != null ? other.progress_.Clone() : null;
      cancelTime_ = other.cancelTime_ != null ? other.cancelTime_.Clone() : null;
      optimizeDatabaseOperationName_ = other.optimizeDatabaseOperationName_;
      switch (other.SourceInfoCase) {
        case SourceInfoOneofCase.BackupInfo:
          BackupInfo = other.BackupInfo.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestoreDatabaseMetadata Clone() {
      return new RestoreDatabaseMetadata(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Name of the database being created and restored to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "source_type" field.</summary>
    public const int SourceTypeFieldNumber = 2;
    private global::Google.Cloud.Spanner.Admin.Database.V1.RestoreSourceType sourceType_ = global::Google.Cloud.Spanner.Admin.Database.V1.RestoreSourceType.TypeUnspecified;
    /// <summary>
    /// The type of the restore source.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Spanner.Admin.Database.V1.RestoreSourceType SourceType {
      get { return sourceType_; }
      set {
        sourceType_ = value;
      }
    }

    /// <summary>Field number for the "backup_info" field.</summary>
    public const int BackupInfoFieldNumber = 3;
    /// <summary>
    /// Information about the backup used to restore the database.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Spanner.Admin.Database.V1.BackupInfo BackupInfo {
      get { return sourceInfoCase_ == SourceInfoOneofCase.BackupInfo ? (global::Google.Cloud.Spanner.Admin.Database.V1.BackupInfo) sourceInfo_ : null; }
      set {
        sourceInfo_ = value;
        sourceInfoCase_ = value == null ? SourceInfoOneofCase.None : SourceInfoOneofCase.BackupInfo;
      }
    }

    /// <summary>Field number for the "progress" field.</summary>
    public const int ProgressFieldNumber = 4;
    private global::Google.Cloud.Spanner.Admin.Database.V1.OperationProgress progress_;
    /// <summary>
    /// The progress of the
    /// [RestoreDatabase][google.spanner.admin.database.v1.DatabaseAdmin.RestoreDatabase]
    /// operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Spanner.Admin.Database.V1.OperationProgress Progress {
      get { return progress_; }
      set {
        progress_ = value;
      }
    }

    /// <summary>Field number for the "cancel_time" field.</summary>
    public const int CancelTimeFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp cancelTime_;
    /// <summary>
    /// The time at which cancellation of this operation was received.
    /// [Operations.CancelOperation][google.longrunning.Operations.CancelOperation]
    /// starts asynchronous cancellation on a long-running operation. The server
    /// makes a best effort to cancel the operation, but success is not guaranteed.
    /// Clients can use
    /// [Operations.GetOperation][google.longrunning.Operations.GetOperation] or
    /// other methods to check whether the cancellation succeeded or whether the
    /// operation completed despite cancellation. On successful cancellation,
    /// the operation is not deleted; instead, it becomes an operation with
    /// an [Operation.error][google.longrunning.Operation.error] value with a
    /// [google.rpc.Status.code][google.rpc.Status.code] of 1, corresponding to `Code.CANCELLED`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CancelTime {
      get { return cancelTime_; }
      set {
        cancelTime_ = value;
      }
    }

    /// <summary>Field number for the "optimize_database_operation_name" field.</summary>
    public const int OptimizeDatabaseOperationNameFieldNumber = 6;
    private string optimizeDatabaseOperationName_ = "";
    /// <summary>
    /// If exists, the name of the long-running operation that will be used to
    /// track the post-restore optimization process to optimize the performance of
    /// the restored database, and remove the dependency on the restore source.
    /// The name is of the form
    /// `projects/&lt;project>/instances/&lt;instance>/databases/&lt;database>/operations/&lt;operation>`
    /// where the &lt;database> is the name of database being created and restored to.
    /// The metadata type of the  long-running operation is
    /// [OptimizeRestoredDatabaseMetadata][google.spanner.admin.database.v1.OptimizeRestoredDatabaseMetadata]. This long-running operation will be
    /// automatically created by the system after the RestoreDatabase long-running
    /// operation completes successfully. This operation will not be created if the
    /// restore was not successful.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OptimizeDatabaseOperationName {
      get { return optimizeDatabaseOperationName_; }
      set {
        optimizeDatabaseOperationName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    private object sourceInfo_;
    /// <summary>Enum of possible cases for the "source_info" oneof.</summary>
    public enum SourceInfoOneofCase {
      None = 0,
      BackupInfo = 3,
    }
    private SourceInfoOneofCase sourceInfoCase_ = SourceInfoOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SourceInfoOneofCase SourceInfoCase {
      get { return sourceInfoCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSourceInfo() {
      sourceInfoCase_ = SourceInfoOneofCase.None;
      sourceInfo_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RestoreDatabaseMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RestoreDatabaseMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (SourceType != other.SourceType) return false;
      if (!object.Equals(BackupInfo, other.BackupInfo)) return false;
      if (!object.Equals(Progress, other.Progress)) return false;
      if (!object.Equals(CancelTime, other.CancelTime)) return false;
      if (OptimizeDatabaseOperationName != other.OptimizeDatabaseOperationName) return false;
      if (SourceInfoCase != other.SourceInfoCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (SourceType != global::Google.Cloud.Spanner.Admin.Database.V1.RestoreSourceType.TypeUnspecified) hash ^= SourceType.GetHashCode();
      if (sourceInfoCase_ == SourceInfoOneofCase.BackupInfo) hash ^= BackupInfo.GetHashCode();
      if (progress_ != null) hash ^= Progress.GetHashCode();
      if (cancelTime_ != null) hash ^= CancelTime.GetHashCode();
      if (OptimizeDatabaseOperationName.Length != 0) hash ^= OptimizeDatabaseOperationName.GetHashCode();
      hash ^= (int) sourceInfoCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (SourceType != global::Google.Cloud.Spanner.Admin.Database.V1.RestoreSourceType.TypeUnspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) SourceType);
      }
      if (sourceInfoCase_ == SourceInfoOneofCase.BackupInfo) {
        output.WriteRawTag(26);
        output.WriteMessage(BackupInfo);
      }
      if (progress_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Progress);
      }
      if (cancelTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CancelTime);
      }
      if (OptimizeDatabaseOperationName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(OptimizeDatabaseOperationName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (SourceType != global::Google.Cloud.Spanner.Admin.Database.V1.RestoreSourceType.TypeUnspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) SourceType);
      }
      if (sourceInfoCase_ == SourceInfoOneofCase.BackupInfo) {
        output.WriteRawTag(26);
        output.WriteMessage(BackupInfo);
      }
      if (progress_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Progress);
      }
      if (cancelTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CancelTime);
      }
      if (OptimizeDatabaseOperationName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(OptimizeDatabaseOperationName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (SourceType != global::Google.Cloud.Spanner.Admin.Database.V1.RestoreSourceType.TypeUnspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SourceType);
      }
      if (sourceInfoCase_ == SourceInfoOneofCase.BackupInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BackupInfo);
      }
      if (progress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Progress);
      }
      if (cancelTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CancelTime);
      }
      if (OptimizeDatabaseOperationName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OptimizeDatabaseOperationName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RestoreDatabaseMetadata other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.SourceType != global::Google.Cloud.Spanner.Admin.Database.V1.RestoreSourceType.TypeUnspecified) {
        SourceType = other.SourceType;
      }
      if (other.progress_ != null) {
        if (progress_ == null) {
          Progress = new global::Google.Cloud.Spanner.Admin.Database.V1.OperationProgress();
        }
        Progress.MergeFrom(other.Progress);
      }
      if (other.cancelTime_ != null) {
        if (cancelTime_ == null) {
          CancelTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CancelTime.MergeFrom(other.CancelTime);
      }
      if (other.OptimizeDatabaseOperationName.Length != 0) {
        OptimizeDatabaseOperationName = other.OptimizeDatabaseOperationName;
      }
      switch (other.SourceInfoCase) {
        case SourceInfoOneofCase.BackupInfo:
          if (BackupInfo == null) {
            BackupInfo = new global::Google.Cloud.Spanner.Admin.Database.V1.BackupInfo();
          }
          BackupInfo.MergeFrom(other.BackupInfo);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            SourceType = (global::Google.Cloud.Spanner.Admin.Database.V1.RestoreSourceType) input.ReadEnum();
            break;
          }
          case 26: {
            global::Google.Cloud.Spanner.Admin.Database.V1.BackupInfo subBuilder = new global::Google.Cloud.Spanner.Admin.Database.V1.BackupInfo();
            if (sourceInfoCase_ == SourceInfoOneofCase.BackupInfo) {
              subBuilder.MergeFrom(BackupInfo);
            }
            input.ReadMessage(subBuilder);
            BackupInfo = subBuilder;
            break;
          }
          case 34: {
            if (progress_ == null) {
              Progress = new global::Google.Cloud.Spanner.Admin.Database.V1.OperationProgress();
            }
            input.ReadMessage(Progress);
            break;
          }
          case 42: {
            if (cancelTime_ == null) {
              CancelTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CancelTime);
            break;
          }
          case 50: {
            OptimizeDatabaseOperationName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            SourceType = (global::Google.Cloud.Spanner.Admin.Database.V1.RestoreSourceType) input.ReadEnum();
            break;
          }
          case 26: {
            global::Google.Cloud.Spanner.Admin.Database.V1.BackupInfo subBuilder = new global::Google.Cloud.Spanner.Admin.Database.V1.BackupInfo();
            if (sourceInfoCase_ == SourceInfoOneofCase.BackupInfo) {
              subBuilder.MergeFrom(BackupInfo);
            }
            input.ReadMessage(subBuilder);
            BackupInfo = subBuilder;
            break;
          }
          case 34: {
            if (progress_ == null) {
              Progress = new global::Google.Cloud.Spanner.Admin.Database.V1.OperationProgress();
            }
            input.ReadMessage(Progress);
            break;
          }
          case 42: {
            if (cancelTime_ == null) {
              CancelTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CancelTime);
            break;
          }
          case 50: {
            OptimizeDatabaseOperationName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Metadata type for the long-running operation used to track the progress
  /// of optimizations performed on a newly restored database. This long-running
  /// operation is automatically created by the system after the successful
  /// completion of a database restore, and cannot be cancelled.
  /// </summary>
  public sealed partial class OptimizeRestoredDatabaseMetadata : pb::IMessage<OptimizeRestoredDatabaseMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OptimizeRestoredDatabaseMetadata> _parser = new pb::MessageParser<OptimizeRestoredDatabaseMetadata>(() => new OptimizeRestoredDatabaseMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OptimizeRestoredDatabaseMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Spanner.Admin.Database.V1.SpannerDatabaseAdminReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OptimizeRestoredDatabaseMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OptimizeRestoredDatabaseMetadata(OptimizeRestoredDatabaseMetadata other) : this() {
      name_ = other.name_;
      progress_ = other.progress_ != null ? other.progress_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OptimizeRestoredDatabaseMetadata Clone() {
      return new OptimizeRestoredDatabaseMetadata(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Name of the restored database being optimized.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "progress" field.</summary>
    public const int ProgressFieldNumber = 2;
    private global::Google.Cloud.Spanner.Admin.Database.V1.OperationProgress progress_;
    /// <summary>
    /// The progress of the post-restore optimizations.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Spanner.Admin.Database.V1.OperationProgress Progress {
      get { return progress_; }
      set {
        progress_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OptimizeRestoredDatabaseMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OptimizeRestoredDatabaseMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(Progress, other.Progress)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (progress_ != null) hash ^= Progress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (progress_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Progress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (progress_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Progress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (progress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Progress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OptimizeRestoredDatabaseMetadata other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.progress_ != null) {
        if (progress_ == null) {
          Progress = new global::Google.Cloud.Spanner.Admin.Database.V1.OperationProgress();
        }
        Progress.MergeFrom(other.Progress);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (progress_ == null) {
              Progress = new global::Google.Cloud.Spanner.Admin.Database.V1.OperationProgress();
            }
            input.ReadMessage(Progress);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (progress_ == null) {
              Progress = new global::Google.Cloud.Spanner.Admin.Database.V1.OperationProgress();
            }
            input.ReadMessage(Progress);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
